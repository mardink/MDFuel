<?xml version="1.0" encoding="UTF-8"?>
<project name="MDFuel" description="MDfuel component for Joomla!" default="copy" >

    <!-- Default properties -->
    <property name="dirs.root" value="../MDFuel" />
    <property name="dirs.backend" value="../backend" />
    <property name="dirs.front" value="../frontend" />
    <property name="dirs.language" value="../language" />
    <property name="dirs.media" value="../media" />
    <property name="dirs.release" value="../release" />
    <property name="version" value="dev" />

    <!--<taskdef name="zipme" classname="phingext.ZipmeTask" />
    <taskdef name="gitversion" classname="phingext.GitVersionTask" />
    <taskdef name="gitdate" classname="phingext.GitDateTask" />
-->
    <!--
    ====================================================================================================
    Tasks - General
    ====================================================================================================
    -->

    <target name="all" description="Makes everything"
            depends="dev-release">
    </target>

    <target name="git" description="Makes only the library package"
            depends="new-release,setup-properties,library-package">
    </target>

    <target name="dev-release" description="Makes only packages, not the documentation"
            depends="git">
    </target>

    <target name="new-release" description="Create the release directory afresh">
        <!-- Recreate the release directory -->
        <delete dir="${dirs.release}" quiet="yes" includeemptydirs="false" />
        <mkdir dir="${dirs.release}" />
    </target>

    <target name="setup-properties" description="Set up version and build properties">
        <!-- Initialize the build.date timestamp -->
        <tstamp>
            <format property="build.date" pattern="%Y-%m-%d" />
        </tstamp>

        <!-- Initialize the version if it's not set -->
        <if>
            <equals arg1="${version}" arg2="dev" />
            <then>
                <gitversion workingcopy="${dirs.root}" propertyname="git.lastrevision" />
                <gitdate workingcopy="${dirs.root}" propertyname="git.timestamp" />
                <!--<property name="version" value="rev${git.lastrevision}" override="true" />-->
                <property name="version" value="rev${git.lastrevision}-${git.timestamp}" override="true" />
            </then>
        </if>
    </target>

    <!--
    ====================================================================================================
    Tasks - Joomla! packages
    ====================================================================================================
    -->

    <target name="library-package" description="FOF Installation Package for Joomla! 1.6+"
            depends="new-release,setup-properties">


        <!-- Generate version.txt file for Component-->
        <copy file="./templates/version.txt" tofile="${dirs.release}/version.txt" overwrite="true">
            <filterchain>
                <replacetokens begintoken="##" endtoken="##">
                    <token key="DATE" value="${build.date}" />
                    <token key="VERSION" value="${version}" />
                </replacetokens>
            </filterchain>
        </copy>

        <!-- Create the package
        <zipme basedir="${dirs.backend}" prefix="fof/" destfile="${dirs.release}/lib_fof-${version}.zip" includeemptydirs="true">
            <fileset dir="${dirs.backend}" id="library">
                <include name="**" />
            </fileset>
        </zipme>
        <zipme basedir="${dirs.root}" destfile="${dirs.release}/lib_fof-${version}.zip" includeemptydirs="true">
            <fileset dir="${dirs.root}">
                <include name="lib_fof.xml" />
            </fileset>
        </zipme>
-->
        <!-- Clean up -->
        <delete>
            <fileset dir="${dirs.root}">
                <include name="lib_fof.xml" />
            </fileset>
        </delete>
    </target>

<target name="copy" description="Copies file from joomla to github folder">
    <!-- Generate version.txt file for Component-->
    <copy file="./templates/version.txt" tofile="${dirs.root}/version.txt" overwrite="true">
        <filterchain>
            <replacetokens begintoken="##" endtoken="##">
                <token key="DATE" value="vandaag" />
                <token key="VERSION" value="geen idee" />
            </replacetokens>
        </filterchain>
    </copy>

</target>



</project>